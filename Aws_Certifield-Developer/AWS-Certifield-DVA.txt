------------------------------Anotações AWS Certifield Developer Associate---------------------------------------

Course name: AWS Certifield Developer Associate - DVA-1 2024
Instrutor: Stephane Marek.
Inicio do Curso: 03/01/2024
Previsão de realização do Exame: 01/03/2024
------------------------------------------------------------------------------------------------------------------
         AIM - Identity and Acess Managenment: (identidade e gerenciamento de acesso);

  -> user, groups, policys
 
  IAM - Permissions - aplicamos na AWS principio de Menor privilegio.
  - criamos um usuario - uma senha especifica
  - criamos um grupo de usuarios (add user group). the name and admin.
  - Na parte de Permissions Policy adicionamos a politica AdministratorAcess.

  - As Tags estão por toda a AWS, com elas podemos fornecer a muito de seus recursos.
  - Quando criamos um group e ele tem Policys de AdministratorAcess. quando o meu
  - usuario e Indexado dentro daquele group (admin) herda as politicas dele.

 ---------------------------------------------policys in Details-------------------------------------------------------------------
 Vamos discutir as politicas IAM em detalhes:

Vamos imaginar que tenho um grupo de desenvolvedores:
-> Alice, Bob and Chales:
Adicionaremos estes usuarios e eles terão acesso e herdem essa politica.
Se por ventura tivermos um usuario somente, podemos adicionar uma politica (policy)
chamada inline policy que possui uma politica que e anexada apenas a um Usuario (user);

Sobre a estrutura da Policy:
no arquivo Json:
-> Statement content:
"Statement": [
    {
        "Sid": "1",           -> e um ID de instrução, que e um indentificador para a instrução (optinal)
        "Effect": "Allow",    -> O efeito da propria politica, se a instrução permite ou nega o acesso a uma API
        "Principal": {        -> Consiste em Quais contas, usuarios ou Roles a qual esta politica será aplicada
            "AWS": ["arn:aws:iam::12345789012:root"]
        },
        "Action": [           -> E a lista de chamadas de API que serão negadas ou permitidas com base no efeito.

                "s3:GetObject",
                "s3:PutObject"
        ],

        "Resource": ["arn:aws:s3:::mybucket/*"]   -> Resource e uma lista de recursos a quais as ações serão aplicadas
        porém neste exemplo e um bucket poderia ser qualquer outra coisa.

    }
]
---------------------------------------------IAM Roles Hads on-------------------------------------------------------
IAM Roles in Details:
Podemos criar nossas proprias policys, em create the Policy tanto com Json Document, Quanto em Visual.
criamos uma politica chamada MyIamPermission.
-> Attachment Policy Directly.

---------------------------------------------IAM MFA - MultiFactory Autenthicator----------------------------------
IAM Policy Password:
criando Acess Key e Secret Key para acessar AWS CLI. através do CLI podemos acessar recursos da AWS.
fazendo a requisição através de uma API:
command: aws iam list-user. tirando as permissions estamos sem acesso ao user Stephane, tanto pelo CLI
quanto pelo console.
aws configure: 
its credentials is required:

Acess Key:  *********************
Secret Key:  *****************************
region:     us-east-1
text-format: [press Enter]

No terminal podemos utilizar o comando aws iam list-users
Note que se removermos a permissão do user: Stephane, tanto no console, quanto no CLI não teriamos acesso.
Importante que incluiremos novamente o usuario Stephane ao grupo admin, onde temos as politicas de grupo
Policy group AdministratorAcess.

-------------------------------------------AWS Cloud Shell-------------------------------------------------------
Utilizando o AWS Cloud Shell temos 12 Regioes que estão disponivéis.
na AWS Cloud Shell e um terminal como o CLI podemos utilizar comandos aws --version, aws aim list-usets.. etc.
Temos o recurso de Download e Upload de scripts e o que quisetmos fazer dentro do CloudShell.

------------------------------------------Iam Roles for Services--------------------------------------------------
- Este e o ultimo componente do IAM, que e o IAM Roles.
Alguns serviços da AWS que lançaremos precisarão realizar ações em nosso nome, em nossa conta.
Portanto precisamos atribuir permissões aos serviços da AWS para isto, vamos criar o que e chanadi de função IAM.
Criaremos uma EC2 instance (Virtual Server) mais para que esta instancia EC2 queira realizar algumas ações na AWS
e para juntos eles vão fazer identidade.
Digamos que a EC2 queira realizar algumas ações na AWS e para isso precisamos dar permissão para nossa instancia,
Para fazer isto vamos criar uma IAM Roles e, juntos, eles vão fazer uma entidade.

E juntos, uma vez que a instancia EC2 esta tentando acessar algumas informações da AWS, ela usara a Função IAM!
E se a permissão atribuida a função IAM estiver correta * (teremos acesso a chamada que estamos tentando fazer)

- Portanto algumas funções comuns incluiem o funções:
    -> EC2 Instance Roles
    -> Lambda Functions Roles
    -> Roles for CloudFormation
------------------------------------IAM Roles Hands On-------------------------------------------------------------
Trusted Entity type

-> AWS Services

use Case:
Qual serviço queremos que esta função se aplique:
EC2

-> para uma instancia do EC2, precisaremos anexar uma policy:

Portanto vou adicionar uma politica para somente leitura do IAM
- IAMReadOnlyAcess 
para permitir que minha instancia do EC2 leia o que estiver no IAM.

Em seguida precisamos inserir uma demonstração ou nome da Role (função)
e selecionamos as Trust policys ou entidades confiavéis.
pra finalizar Create Role.

-> podemos observar que ela aparece em minhas listas de functions (Roles) e podemos verificar se
as permissões estão corretas.

------------------------------------IAM Security Tools------------------------------------------------------------
-> vamos falar sobre o tipo de ferramentas de segurança que temos no IAM:
Podemos criar um relatorio de Credenciais (Credentials Report)
Um relatorio de listas de todos os seus usuarios e contas de varias credenciais.

-> A segunda ferramenta e o IAM Acess Advison ele mostrará as permissões de serviço concedidas,
a um usuario e quando esses serviçoes foram acessados pela ultima vez

-----------------------------------IAM Acess Advisor | Credentials Report-----------------------------------------
Vamos gerar um Credenciais Reports, vamos em Credentials Report e Download.
Analisando as informações:

-Aqui podemos ver quando o usuario foi criado;
-Se a senha foi ativada (password Enable) 
-pela ultima vez que foi alterada
-Se o MFA esta Ativo
-Se as Chaves de Acesso são geradas ou não
-Se as chaves de Acesso foram Rotacionadas pela ultima vez

Portanto este relatorio e extremamente util se quisermos examinar alguns usuarios que não estão alterando suas senhas

Acess Advisor:

ele vai me mostrar quais foram os serviços acessados pelo meu usuario e quando.
Então utilizando o Acess Advisor, e possivel verificar se o usuario tem ou não permissão corretas.
O Acess Adivisor e util quando precisamos fazer permissões granulares de acesso de usuarios na AWS.

-------------------------------------Melhores Praticas gerais sobre o IAM AWS-------------------------------------
--> IAM Guidelines & Best Practices:
- Devemos habilitar o MFA para usuarios.
- Jamais utilizar a root account e sim criar um user.
- para Acess Programmatic usando CLI/SDK nunca fornecer suas credenciais Acess Key / Secret Key (senhas muito secretas)
- Criar AIM Roles para dar permissões ao Virtual Server (EC2) Instance leia o IAM.
- Adicionar Policys restringindo acessos e dando permissões para Grupos e usuarios (inline Permissions)
- Para editar as permissões da conta, podemos usar o relatorios credenciais (Credenciais Report ou Acess Adivisor)
- Important: Jamais compartilhe IAM suas chaves de acesso.

------------------------------------Modelo de responsabilidade Compartilhada (exame)-------------------------------
Shared Responsability Model for IAM:
como o modelo de responsabilidade funciona para a AWS

->  A AWS e responsável por tudo o que faz, por exemplo sua infraestrutura e sua segurança de rede global,
a configuração e a analise de vulnerabilidade dos serviços que oferecem e qualquer tipo de conformidade pela
qual sejam responsaveis.

-------Vou e responsavél:
- Criar seus proprios usuarios
- Seus Grupos
- Suas Policys (politicas)
- Suas Roles
E por fim o gerenciamento (Managenment the Policys) das politicas, e o monitoramento delas.
- Habilitar o MFA (Autenthicator in Accoynt) em todas as contas e aplica-las.
- Responsavel por garantir que as chaves sejam giradas com frequencia.
- Certificar de que estamos usando as ferramnetas para aplicar as permissões adequadas em suas contas
---------------------------------Resumo IAM ---------------------------------------------------------------------

Vimos usuarios do IAM deve  ser mapeados para um usuario fisico real dentro da empresa
e este usuario terá ua senha para o console AWS
Agora podemos agrupar estes grupos e adicionar usuarios, podemos anexar politicas ao grupo ou indexar ao 
usuario diretamente.
E tambem podemos criar Roles, e estes papeis serão Identidades, mas desta vez talves para Instance Ec2, CloudFormation Roles,
and Lamdda Functions Roles ou outros serviços.

Sobre o principio de segurança, podemos permitir a autenticação multi-fator (MFA) e definir as politicas de senhas aos usuarios
CLI Podemos usar para gerenciar os serviços AWS, usando um linguagem de programação

E por fim podemo criar Acess Key e Secret Key  chaves de acesso, podemos criar um Credenciais Reports do IAM,
e tambem um Acess Advisor services.

Quiz AWS IAM Section:
Questions IAM:

1. What is a proper definition of an IAM Role? Correct
2. Which of the followinf=g ins a IAM Security Tools? Correct
3. Which answer is INCORRECT regarding IAM USERS? Correct
4. What are IAM Policies? Correct
5. What Should you do to increase your root account security? Correct
6. IAM User Groups can contains IAM Users and Other IAM Groups Correct
7. an IAM policy consist of one or more Statement. A statement in an IAM Policy consists of the following Correct
8. According to the AWS Shared Responsability Model, whitch of the following is AWS Responsability Correct.

INCORRECT answer:
9. Which of the following is an IAM best Practice? answer: Least Privilege.
10. Which principle Should you apply regarding IAM Permissions? answer:  
--------------------------------- AWS Budget Setup --------------------------------------------------------
- AWS management Console:

